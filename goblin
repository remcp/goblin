using System;
using System.Diagnostics.Contracts;
using System.Security.Cryptography.X509Certificates;

namespace goblin
{

    public static class Xp
    {
        public static int xpneed = 1;
    };
    class world
    {
        public int Worldkeuze(int explored,int[] stats)
        {
            Console.Clear();
            int box = 0;
            int keuze = 0;
            if (explored == 0)
            {
                keuze = 1;
            }
            else if(explored == 1)
            {
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("seems like this area is dangerous..");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("it might be best to get out of here..");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("but where you end up might be even worse..");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
            checkinput:;
                Console.WriteLine("1. go back to the room   2. explore the street   0. fight another goblin");
                try
                {
                    keuze = Int32.Parse(Console.ReadLine());
                }
                catch
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("at least try choosing a number");
                    Console.ReadLine();
                    Console.Clear();
                    goto checkinput;
                }
            }
            else if (explored == 2)
            {
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("and now we are alone in the street again");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("we do see a church further down the road");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("it looks like a great hideout while we figure out what is happening");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("but somehow it does feel very unsafe. maybe we should make sure we explored everything before heading in");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
            checkinput2:;
                Console.WriteLine("1. go back to the room   2. keep exploring the street    3. go to the church    0. fight another goblin");
                try
                {
                    keuze = Int32.Parse(Console.ReadLine());
                }
                catch
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("at least try choosing a number");
                    Console.ReadLine();
                    Console.Clear();
                    goto checkinput2;
                }

            }
            else if (explored == 3)
            {
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you hear a loud growl roar nearby");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("while running out of the church you swear to never go back there");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("but what now?");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("probably best to keep training for when we come across something like that again");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
            checkinput2:;
                Console.WriteLine("1. go back to the room   2. keep exploring the street    0. fight another goblin");
                try
                {
                    keuze = Int32.Parse(Console.ReadLine());
                }
                catch
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("at least try choosing a number");
                    Console.ReadLine();
                    Console.Clear();
                    goto checkinput2;
                }
                if (keuze == 3)
                {
                    keuze = 2;
                }

            }
            Console.Clear();
            return keuze;
        }
        public Boolean Area1(int[] stats)
        {
            int box = 0;
            int keuze = 0;
            Boolean area1 = true;
        checkinput:;
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("you find yourself in a stange room...");
 
             string room = @"
       ____________________________________
      / |                                  | 
     /  |                                  |
    /   |                                  |
    |   |                                  |
    |   |             ___                  |
    |   |            |   |                 |
    |   |            |  *|           \____/|
    |   |            |   |       __  |    ||
    |   |____________|___|______|__|_|____||
    |  /                                   |
    | /                                    | 
    |/_____________________________________|
";
        boxes:;
            Console.WriteLine(room);
            Console.WriteLine();
            Console.WriteLine("all you see is a door and some boxes that look empty");
            Console.WriteLine();
            Console.WriteLine("1. leave the room.    2. check out the boxes");
            try
            {
                keuze = Int32.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("at least try choosing a number");
                Console.ReadLine();
                Console.Clear();
                goto checkinput;
            }
            if (keuze == 1221)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("nope");
                Console.ReadLine();
                Console.Clear();
            }
            if (keuze == 1)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you walk to the door... open it... and...");
                Console.ReadLine();
                Console.Clear();
                area1 = false;
            }
            if (keuze == 2)
            {
                if (box < 5)
                {
                    box++;
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("as expected... the boxes are indeed empty...");
                    string checkbox = @"
                   _____________          
                  /             \   
                 /               \   
                /_________________\  
              /|\                 /|\
             / | \               / | \
            /  |  \_____________/  |  \
           /   |  |             |  |   \
           |  /|  |_____________|  |\  |
           | / |  |             |  | \ |
           |/  |  |_____________|  |  \|
           |   | /               \ |   |
           |   |/_________________\|   |
           |  /  \                / \  | 
           | /    \              /   \ |
           |/      \____________/     \|
";
                    Console.WriteLine(checkbox);
                }
                else
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("~~~whoosh~~~ the box transforms into a treasure chest");
                    Console.WriteLine("as soon as you touch the gold it melts away. but a code reveals itself");
                    string checkbox = @"
************************************************************************************
                      _.==''`'=._
                   ,_'_ ,        `'=._
                   '=._o `'=._,       `'=._
                        `'=._o_`'=.__       `'=._
                        __.--,-`'=._o`'=._==_.-='''=._
                   ._--' ,    ;      `'=._o;' ,-'''-._'.
                   |  `'=._ ,  - 1221; , ,  `'=-._   '. ;
                   |       `'=._;  .  ,  '  ,,    '-._; ;
                   |        (#)  `'=._   ,  ;  ,___.--o/
                   |        ' '       `'=.__.--',__.--o;
                   |                     | _.--'       ;
                   `=.o_                 |             ;
                        `'=.o_           |             ;
                              `'=.o_     |       _o.--'
                                    `'=.o|o_.--''
************************************************************************************
";
                    Console.WriteLine(checkbox);
                }
            Console.ReadLine();
            Console.Clear();
            goto boxes;
            }
            

            Console.Clear();


            return area1;
        }

        public int Area2(int[] stats)
        {
            int spin = 5;
            Boolean spins = false;
            int keuze = 0;
            int area2 = 1;
        checkinput:;
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("at least we are out of that room");
            Console.ReadLine();
        boxes:;
            Console.WriteLine();
            Console.WriteLine("but now we are on a street that looks empty");
            string street = @"
  ~         ~~          __
       _T      .,,.    ~--~ ^^
 ^^   // \                    ~
      ][O]    ^^      ,-~ ~
   /''-I_I         _II____
__/_  /   \ ______/ ''   /'\_,__
  | II--'''' \,--:--..,_/,.-{ },
; '/__\,.--';|   |[] .-.| O{ _ }
:' |  | []  -|   ''--:.;[,.'\,/
'  |[]|,.--'' '',   ''-,.    |
  ..    ..-''    ;       ''. '";
            Console.WriteLine(street);
            Console.WriteLine();
            Console.WriteLine("the goblin had to have come from somewhere");
            Console.WriteLine();
            Console.WriteLine("well no use in staying still here. we should probably go explore");
            Console.WriteLine();

            if (spin > 0)
            {
                Console.WriteLine("or we can stand here and spin around " + spin + " times");
            }

            Console.WriteLine();
            if (spin > 0)
            {
                Console.WriteLine("1. go explore    2. spin");
            }
            else
            {
                spins = true;
                goto spins;
            }
            try
            {
                keuze = Int32.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("at least try choosing a number");
                Console.ReadLine();
                Console.Clear();
                goto checkinput;
            }

            if (keuze == 1)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("alright its time to go exploring.. but what is that sound behind us?");
                Console.ReadLine();
                Console.Clear();
                area2 = 0;
            }
            if (keuze == 2)
            {
                spin--;
                if(spin < 0 ) {spin = 0;}
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("yeah no clue what spinning was supposed to accomplish");
                Console.ReadLine();
                Console.Clear();
                goto boxes;
            }
        spins:;
            if (spins == true)
            {
             area2 = 3;
            }


            Console.Clear();


            return area2;
        }


        public Boolean Area3(int[] stats)
        {
            int spin = 5;
            int keuze = 0;
            Boolean area2 = true;
            Boolean area3 = true;
        checkinput:;
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("when looking up at the church you feel a chill down your spine");
            Console.ReadLine();
        boxes:;
            Console.WriteLine();
            Console.WriteLine("the massive church door opens slowly");
            string street = @"
                                 !
                               .':'.
                             .':::::'.
                           .':::::::::'.
                         .':::::::::::::'.
                           ||    %    ||
                           ||   .-.   ||
                           ||  /   \  ||
                           || /_____\ ||
                           ||    O    ||
                         .'||_________||'.
                       .' .'""^""^""^""^""^""'. '.
                     .' .'""^""^""^""^""^""^""^""'. '.
                   .' .'""^""^""^""^""^""^""^""^""^""'. '.
                 .'_.'""^""^""^""^""^"".""^""^""^""^""^""'._'.
                    |===========/+\===========|________________________________________
                    |          /-+-\          |""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^\
                    |          |-+-|          |^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^\
                    |          |-+-|          |""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^""^\
                    |          |-+-|          |==========================================='
                    |          |-.-|          |                    .'.                   |
                    |         =.'.'.=         |            .     .'   '.     .           |
           .'.      |        .'.'.'.'.        |           /+\  .'       '.  /+\          |
         .'   '.    |      .'.'.' '.'.'.      |          /-+-\'._.'._.'._.'/-+-\         |
       .'       '.  |    .'.'.'_____'.'.'.    |          |-+-| .'       '. |-+-|         |
      '._.'._.'._.' |  .'.'_____________'.'.  |          |-+-.'           '.-+-|         |
       .'       '.  | `| ||[][][]|[][][]|| |` |          |-+'._.'._.'._.'._.'+-|         |
     .'           '.|  | ||      |      || |  |          |-+-.'           '.-+-|         |
    '._.'._.'._.'._.'  | || ,;;, | .;;. || |  |          ==.'               '.==         |
     .'           '.|  | ||;;{};;|;;{};;|| |  |           '._.'._.'._.'._.'._.'          |
   .'               '. | ||`<><>`|`<><>`|| |  |            .'               '.           |
  '._.'._.'._.'._.'._.'| ||  /\ [|] /\  || |  |__________.'                   '._________|
   .'               '. | ||      |      || |  |         '._.'._.'._.'._.'._.'._.'
 .'                   '. ||      |      || |__|                  _ -
'lc.'._.'._.'._.'._.'._.'[]______|______[]_|_ -
 _ -                     /_______________\   _ -   
               _ -      /_________________\        
                       /___________________\  _ -        _-";
            Console.WriteLine(street);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("time to go inside");
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            string inside = @"
        ..        ____                                               ____
       . |       / +  \         ||                       ||         /+ . \
      .  |       |o x.|        =**=          _          =**=        | o x|
     .   |       |____|         ||         _( )_         ||         |____|
    .    |                      ||        /_____\        ||
   .     |                 ______________//|   |/__________________
  .      |_______^________/                | + |                  /____^_____
 .      .       _U_      /                 |___|                 //   _U_
       .         |      /_______________________________________//     |
      .         /|\     |______________________________________|/     /|\
     .   (=========================)     .      . (==========================)
    .    |                         |/|  .       . |                          |
   .     |                         | | .        . |                          |
  .      |_______________________|/|.         . ||------------------------||
     (=========================)  || .          . (==========================|
     |                         |/|  .           . |                          |
     |                         | | .            . |                          |
     |_________________________|/|.             . ||------------------------||
 (=========================)  || .              . (==========================)
 |                         |/|  .               . |                          |
 |                         | | .                . |                          |
 |_________________________|/|.                 . | ________________________ |
 |                        || .                  . ||                        ||
";
            Console.WriteLine(inside);
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("you see a big goblin standing on the platform");
            Console.WriteLine();
            Console.WriteLine("do we confront it, or flee");
            Console.WriteLine();
            Console.WriteLine("1. confront    2. flee");
            try
            {
                keuze = Int32.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("at least try choosing a number");
                Console.ReadLine();
                Console.Clear();
                goto checkinput;
            }

            if (keuze == 1)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("we walk up to the big goblin.. and he jumps at us surprisingly fast");
                Console.ReadLine();
                Console.Clear();
                area3 = false;
            }
            if (keuze == 2)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("we flee back to the street. we should train some more");
                Console.ReadLine();
                Console.WriteLine("but the goblin catches us and makes escape inpossible");
                Console.ReadLine();
                Console.Clear();
                area3 = true;
            }


            Console.Clear();


            return area3;
        }

    }
    class goblin
    {
        public string Goblinart()
        {
            string goblinart = @"
             ,      ,
            /(.-""-.)\
        |\  \/      \/  /|
        | \ / =.  .= \ / |
        \( \   o\/o   / )/
         \_, '-/  \-' ,_/
           /   \__/   \
           \ \__/\__/ /
         ___\ \|--|/ /___
       /`    \      /    `\
      /       '----'       \";
            Console.WriteLine(goblinart);
            return goblinart;
        }
        public int Monsters(int[] stats)
        {
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Random rnd = new Random();
            int rndnum = rnd.Next(1, 20 + 1);
            int a = rndnum;
            return rndnum;
        }

        public int[] Goblin()
        {
            int[] statsgoblin = {5, 1, 2, 1 };
            return statsgoblin;
        }
        public int[] luckyGoblin()
        {
            int[] statsgoblin = {7, 2, 2, 7 };
            return statsgoblin;
        }
        public int[] goblinking()
        {
            int[] statsgoblin = {30, 4, 1, 0};
            return statsgoblin;
        }
        public int[] goblinbrute()
        {
            int[] statsgoblin = {15, 3, 2, 0};
            return statsgoblin;
        }
        public int[] goblindamage(int[] stats, int[] goblinstats)
        {
            Boolean crit = false;
            for (int i = 0; i < stats[3]; i++)
            {
                Random rnd = new Random();
                int rndnum = rnd.Next(1, 20 + 1);
                int a = rndnum;
                if (rndnum == 10)
                {
                    crit = true;
                }
            }
            if (crit == true)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you attack and do " + stats[1] * 2 + " damage");
                goblinstats[0] = goblinstats[0] - stats[1] * 2;
                string attack = @"  * ** *
                                   ***/|***
                                   **|\|**
                                    *|||*
                                     |||
             ///~`     |\\_          |||         =\\\\         . .
            ,  |='  ,))\_| ~-_       |||          _)  \      _/_/|
           / ,' ,;((((((    ~ \      |||         `~~~\-~-_ /~ (_/\
         /' -~/~)))))))'\_   _/'  ~-[{o}]-~           \_  /'  D   |
        (       (((((( ~-/ ~-/       |/|                ~-;  /    \--_
         ~~--|   ))''    ')  `       |/|                  `~~\_    \   )
             :        (_  ~\         `0'  ,                 /~~-     ./
              \        \_   )--__  /(_/)                   |    )    )|
    ___       |_     \__/~-__    ~~   ,'      /,_;,   __--(   _/      |
  //~~\`\    /' ~~~----|     ~~~~~~~~'        \-  ((~~    __-~        |
((()   `\`\_(_     _-~~-\                      ``~~ ~~~~~~   \_      /
 )))     ~----'   /      \                                   )       )
  (         ;`~--'        :                                _-    ,;;(
            |    `\       |                             _-~    ,;;;;)
            |    /'`\     ;                          _-~          _/
           /~   /    |    )                         /;;;''  ,;;:-~
          |    /     / | /                         |;;'   ,''
          /   /     |  \\|                         |   ,;(
        _/  /'       \  \_)                   .---__\_    \,--._______
       ( )|'         (~-_|                   (;;'  ;;;~~~/' `;;|  `;;;\
        ) `\_         |-_;;--__               ~~~----__/'    /'_______/
        `----'       (________|\\   `                  ;;;'_/'";
                Console.WriteLine(attack);
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("you attack and do " + stats[1] + " damage");
                goblinstats[0] = goblinstats[0] - stats[1];
                string attack = @"
                                      /|
                                     |\|
                                     |||
                                     |||
             ///~`     |\\_          |||         =\\\\         . .
            ,  |='  ,))\_| ~-_       |||          _)  \      _/_/|
           / ,' ,;((((((    ~ \      |||         `~~~\-~-_ /~ (_/\
         /' -~/~)))))))'\_   _/'  ~-[{o}]-~           \_  /*  D   |
        (       (((((( ~-/ ~-/       |/|                ~-;  /    \--_
         ~~--|   ))''    ')  `       |/|                  `~~\_    \   )
             :        (_  ~\         `0'  ,                 /~~-     ./
              \        \_   )--__  /(_/)                   |    )    )|
    ___       |_     \__/~-__    ~~   ,'      /,_;,   __--(   _/      |
  //~~\`\    /' ~~~----|     ~~~~~~~~'        \-  ((~~    __-~        |
((()   `\`\_(_     _-~~-\                      ``~~ ~~~~~~   \_      /
 )))     ~----'   /      \                                   )       )
  (         ;`~--'        :                                _-    ,;;(
            |    `\       |                             _-~    ,;;;;)
            |    /'`\     ;                          _-~          _/
           /~   /    |    )                         /;;;''  ,;;:-~
          |    /     / | /                         |;;'   ,''
          /   /     |  \\|                         |   ,;(
        _/  /'       \  \_)                   .---__\_    \,--._______
       ( )|'         (~-_|                   (;;'  ;;;~~~/' `;;|  `;;;\
        ) `\_         |-_;;--__               ~~~----__/'    /'_______/
        `----'       (________|\\   `                  ;;;'_/'";
                Console.WriteLine(attack);
            }
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return goblinstats;
        }
    }

    class player
    {
        public int[] Block(int[] stats,int[] goblinstats)
        {
            Boolean block = false;
            for (int i = 0; i < stats[3]; i++)
            {
                Random rnd = new Random();
                int rndnum = rnd.Next(1, 10 + 1);
                int a = rndnum;
                if (rndnum == 10)
                {
                    block = true;
                }
            }
            if (block == true)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacked.. you blocked and reflect " + goblinstats[1] + " damage");
                goblinstats[0] = goblinstats[0] - goblinstats[1];
                string attack = @"                                    
             ///~`     |\\_              
            ,  |='  ,))\_| ~-_       
           / ,' ,;((((((    ~ \        
         /' -~/~)))))))'\_   _/'          
        (       (((((( ~-/ ~-/                 
         ~~--|   ))''    ')  `               
             :        (_  ~\           |`-._/\_.-`|                                   
              \        \_   )--__  /(_/|    ||    |
    ___       |_     \__/~-__    ~~   ,|___o()o___|
  //~~\`\    /' ~~~----|     ~~~~~~~~' |__((<>))__|
((()   `\`\_(_     _-~~-\              \   o\/o   /
 )))     ~----'   /      \              \   ||   /
  (         ;`~--'        :              \  ||  /
            |    `\       |               '.||.'
            |    /'`\     ;                 ``                  
           /~   /    |    )                   
          |    /     / | /                     
          /   /     |  \\|                   
        _/  /'       \  \_)                
       ( )|'         (~-_|       
        ) `\_         |-_;;--__ 
        `----'       (________|\\   `";
                Console.WriteLine(attack);
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacked.. through your block and did " + goblinstats[1] + " damage");
                stats[0] = stats[0] - goblinstats[1];
            }
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return stats;
        }

        public int[] Specialblock(int[] stats, int[] goblinstats, Boolean specialblock)
        {
                specialblock = false;
                Console.WriteLine();
                Console.WriteLine();
            int blockdamage = goblinstats[1] + 2;
                Console.WriteLine("goblin attacked.. you blocked and reflect " + blockdamage + " damage");
                goblinstats[0] = goblinstats[0] - blockdamage;
                string attack = @"                                    
             ///~`     |\\_              
            ,  |='  ,))\_| ~-_       
           / ,' ,;((((((    ~ \        
         /' -~/~)))))))'\_   _/'          
        (       (((((( ~-/ ~-/                 
         ~~--|   ))''    ')  `               
             :        (_  ~\           |`-._/\_.-`|                                   
              \        \_   )--__  /(_/|    ||    |
    ___       |_     \__/~-__    ~~   ,|___o()o___|
  //~~\`\    /' ~~~----|     ~~~~~~~~' |__((<>))__|
((()   `\`\_(_     _-~~-\              \   o\/o   /
 )))     ~----'   /      \              \   ||   /
  (         ;`~--'        :              \  ||  /
            |    `\       |               '.||.'
            |    /'`\     ;                 ``                  
           /~   /    |    )                   
          |    /     / | /                     
          /   /     |  \\|                   
        _/  /'       \  \_)                
       ( )|'         (~-_|       
        ) `\_         |-_;;--__ 
        `----'       (________|\\   `";
            Console.WriteLine(attack);
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return stats;
        }


        public int Move(Boolean special, int[] stats, int[] goblinstats)
        {
        keuze:;
            int move = 0;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("1. attack    2. block    3.special");
            string attack = @"
                                    
                                    
                                   
                                    
             ///~`     |\\_              
            ,  |='  ,))\_| ~-_       
           / ,' ,;((((((    ~ \        
         /' -~/~)))))))'\_   _/'          
        (       (((((( ~-/ ~-/                 
         ~~--|   ))''    ')  `               
             :        (_  ~\                 
              \        \_   )--__  /(_/)          
    ___       |_     \__/~-__    ~~   ,'      
  //~~\`\    /' ~~~----|     ~~~~~~~~'        
((()   `\`\_(_     _-~~-\                    
 )))     ~----'   /      \                            
  (         ;`~--'        :                            
            |    `\       |                            
            |    /'`\     ;                     
           /~   /    |    )                   
          |    /     / | /                     
          /   /     |  \\|                   
        _/  /'       \  \_)                
       ( )|'         (~-_|       
        ) `\_         |-_;;--__ 
        `----'       (________|\\   `";
            Console.WriteLine(attack);
            try
            {
                move = Int32.Parse(Console.ReadLine());
            }
            catch
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("attack");
                Console.ReadLine();
                Console.Clear();
                goto keuze;
            }
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");

            return move;
        }
        public Boolean Special(Boolean special)
        {
            special = false;
            return special;
        }
        public int[] Resethealth(int[] stats,int defaulthealth)
        {
            int[] resethealth = { defaulthealth, stats[1], stats[2], stats[3] };
            return resethealth;
        }


        public int xp(int xpstand, int xp)
        {
            xpstand = xpstand + xp;
            return xpstand;
        }
        public int lvl(int xp, int lvl, int[] stats)
        {
            int lvlcheck = 2 * lvl;
            if (xp >= lvlcheck)
            {
                lvl++;
            oops:;
                Console.WriteLine("lvl up");
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                string keuze = Console.ReadLine();
                Console.Clear();
                try
                {
                    stats[Int32.Parse(keuze) - 1]++;
                }
                catch
                {
                    goto oops;
                }

            }
            return lvl;
        }

        public int lvls(int xp, int lvl, int[] stats, int lvls)
        {
            int up = lvls;
            for (int i = 0; i < lvls; i++)
            {
                lvl++;
            oops:;
                Console.WriteLine(up + " lvls up");
                up--;
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                string keuze = Console.ReadLine();
                Console.Clear();
                try
                {
                    stats[Int32.Parse(keuze) - 1]++;
                }
                catch
                {
                    goto oops;
                }
            }
            return lvl;
        }

        public int[] damage(int[] stats, int[] goblinstats)
        {
            Boolean crit = false;
            for (int i = 0; i < goblinstats[3]; i++)
            {
                Random rnd = new Random();
                int rndnum = rnd.Next(1, 10 + 1);
                if (rndnum == 10)
                {
                    crit = true;
                }
            }
            if (crit == true)
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacks and does " + goblinstats[1] * 2 + " damage");
                stats[0] = stats[0] - goblinstats[1] * 2;
                string attack = @"     
                                *_________                                
             ///~`     |\\_    */         \______=\\\\____|   . .
            ,  |='  ,))\_| ~-_ *|          ________)  \___| _/_/|
           / ,' ,;((((((    * \ *\________/ *    `~~~\-~-_|/~ (_/\
         /' -~/~)))))))'\_   _/' *  *  *  *           \_  /'  D   |
        (       (((((( ~-/ ~-/                          ~-;  /    \--_
         ~~--|   ))''    ')  `                            `~~\_    \   )
             :        (_  ~\                        ,       /~~-     ./
              \        \_   )--__  /(_/)                   |    )    )|
    ___       |_     \__/~-__    ~~   ,'      /,_;,   __--(   _/      |
  //~~\`\    /' ~~~----|     ~~~~~~~~'        \-  ((~~    __-~        |
((()   `\`\_(_     _-~~-\                      ``~~ ~~~~~~   \_      /
 )))     ~----'   /      \                                   )       )
  (         ;`~--'        :                                _-    ,;;(
            |    `\       |                             _-~    ,;;;;)
            |    /'`\     ;                          _-~          _/
           /~   /    |    )                         /;;;''  ,;;:-~
          |    /     / | /                         |;;'   ,''
          /   /     |  \\|                         |   ,;(
        _/  /'       \  \_)                   .---__\_    \,--._______
       ( )|'         (~-_|                   (;;'  ;;;~~~/' `;;|  `;;;\
        ) `\_         |-_;;--__               ~~~----__/'    /'_______/
        `----'       (________|\\   `                  ;;;'_/'";
                Console.WriteLine(attack);
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("goblin attacks and does " + goblinstats[1] + " damage");
                stats[0] = stats[0] - goblinstats[1];
                string attack = @"     
                                 _________                               
             ///~`     |\\_     /         \______=\\\\____|   . .
            ,  |='  ,))\_| ~-_  |          ________)  \___| _/_/|
           / ,' ,;((((((    * \  \________/      `~~~\-~-_|/~ (_/\
         /' -~/~)))))))'\_   _/'                      \_  /'  D   |
        (       (((((( ~-/ ~-/                          ~-;  /    \--_
         ~~--|   ))''    ')  `                            `~~\_    \   )
             :        (_  ~\                        ,       /~~-     ./
              \        \_   )--__  /(_/)                   |    )    )|
    ___       |_     \__/~-__    ~~   ,'      /,_;,   __--(   _/      |
  //~~\`\    /' ~~~----|     ~~~~~~~~'        \-  ((~~    __-~        |
((()   `\`\_(_     _-~~-\                      ``~~ ~~~~~~   \_      /
 )))     ~----'   /      \                                   )       )
  (         ;`~--'        :                                _-    ,;;(
            |    `\       |                             _-~    ,;;;;)
            |    /'`\     ;                          _-~          _/
           /~   /    |    )                         /;;;''  ,;;:-~
          |    /     / | /                         |;;'   ,''
          /   /     |  \\|                         |   ,;(
        _/  /'       \  \_)                   .---__\_    \,--._______
       ( )|'         (~-_|                   (;;'  ;;;~~~/' `;;|  `;;;\
        ) `\_         |-_;;--__               ~~~----__/'    /'_______/
        `----'       (________|\\   `                  ;;;'_/'";
                Console.WriteLine(attack);
            }
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            Console.WriteLine("goblin has " + goblinstats[0] + " health");
            return stats;
        }
        public string name()
        {
            Console.WriteLine("name");
            string name = Console.ReadLine();
            Console.Clear();
            return name;
        }

        public int[] Stats_setup(int lvl)
        {
            int[] stats = { 1, 1, 1, 1 };
            Console.WriteLine(lvl + " points to spend on stats");
            for (int i = 0; i < lvl; i++)
            {
            oops:;
                Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
                string keuze = Console.ReadLine();
                Console.Clear();
                try
                {
                    stats[Int32.Parse(keuze) - 1]++;
                }
                catch
                {
                    goto oops;
                }
            }

            return stats;
        }

        public int[] Stats(int[] stats)
        {
            Console.WriteLine("health " + stats[0] + ", damage " + stats[1] + ", speed " + stats[2] + ", luck " + stats[3]);
            return stats;
        }

        static void Main()
        {
        newgame:;
            Console.SetWindowSize(110, 46);
            Xp.xpneed = 1;
            int worldkeuze = 9;
            int explored = 0;
            int move = 0;
            int lvl = 5;
            int lvlupcheck = 0;
            int xp = 0;
            int monsters = 0;
            Boolean area1 = true;
            int area2 = 0;
            Boolean area3 = false;
            Boolean special = false;
            Boolean specialblock = false;
            Boolean code = true;
            Boolean goblin_alive = false;
            Boolean luckygoblin_alive = false;
            Boolean goblinking_alive = false;
            Boolean goblinbrute_alive = false;
            string name = " ";
            player n = new();
            goblin nn = new();
            world nnn = new();
            //name = n.name();

            //Console.WriteLine("hello " + name);
            //Console.ReadLine();
            int[] stats = { 0, 0, 0, 0 };
            n.Stats(stats);
            Console.WriteLine();
            Console.WriteLine();
            stats = n.Stats_setup(lvl);
            int defaulthealth = stats[0];
        worldkeuze:;
            worldkeuze = nnn.Worldkeuze(explored, stats); 
            if(worldkeuze == 0)
            {

            }
            else if(worldkeuze == 1 & explored >= 0)
            {
                area1 = true;
            }
            else if(worldkeuze == 2 & explored >= 1)
            {
                area2 = 1;
            }
            else if (worldkeuze == 3 & explored >= 2)
            {
                area3 = true;
            }
            else if (worldkeuze == 0)
            {
                goto monsters;
            }
            else if (worldkeuze == 1221)
            {
                if(code == true)
                {
                    code = false;
                    Console.WriteLine("the boxes were not empty after all");
                    lvl = n.lvls(xp, lvl, stats, 10);
                    defaulthealth = stats[0];
                    goto monsters;
                }
                else
                {
                    Console.WriteLine("you already found the secret");
                }
            }
        world:;
            while(area1 == true)
            {
                area1 = nnn.Area1(stats);
                if (explored == 0)
                {
                    explored = 1;
                }
            }

            while (area2 == 1)
            {
                area2 = nnn.Area2(stats);
                if (explored == 1)
                {
                    explored = 2;
                }
                if(area2 == 3)
                {
                    goto getspecialblock;
                }
            }
            while (area3 == true)
            {
                area3 = nnn.Area3(stats);
                if (explored == 2)
                {
                    explored = 3;
                }
                goblinbrute_alive = true;
                goto goblinbrute;
            }
            goto monsters;
        goblin:;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("goblin encounter");
            string goblinart = nn.Goblinart();
            Console.ReadLine();
            Console.Clear();
            int[] goblinstats = nn.Goblin();
            while (goblin_alive == true)
            {
            move:;
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvl(xp, lvl, stats);
                        if(lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto worldkeuze;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        goblinstats = nn.goblindamage(stats, goblinstats);

                        stats = n.damage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvl(xp, lvl, stats);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto worldkeuze;
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }


                }

            }
        luckygoblin:;
            goblinstats = nn.luckyGoblin();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("a lucky goblin showed up");
            Console.ReadLine();
            while (luckygoblin_alive == true)
            {
            move:;
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("lucky goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvls(xp, lvl, stats, 3);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto worldkeuze;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        goblinstats = nn.goblindamage(stats, goblinstats);

                        stats = n.damage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("lucky goblin dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvls(xp, lvl, stats, 3);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto worldkeuze;
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }


                }
            }

        goblinking:;
            goblinstats = nn.goblinking();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("goblin king showed up");
            Console.ReadLine();
            while (goblinking_alive == true)
            {
            move:;
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin king dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvl(xp, lvl, stats);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto you_won;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        goblinstats = nn.goblindamage(stats, goblinstats);

                        stats = n.damage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin king dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvl(xp, lvl, stats);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto you_won;
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }


                }
            }
        goblinbrute:;
            if (special == true)
            {
                specialblock = true;
            }
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("Goblin Brute");
            goblinart = nn.Goblinart();
            Console.ReadLine();
            Console.Clear();
            goblinstats = nn.goblinbrute();
            while (goblinbrute_alive == true)
            {
            move:;
                move = n.Move(special, stats, goblinstats);
                if (goblinstats[2] > stats[2])
                {
                    if (move == 1)
                    {
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                        goblinstats = nn.goblindamage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        Console.WriteLine("you blocked too slow..");
                        stats = n.damage(stats, goblinstats);
                        if (stats[0] <= 0)
                        {
                            goto dead;
                        }
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin brute dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvls(xp, lvl, stats,5);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto worldkeuze;
                    }

                }
                else
                {
                    if (move == 1)
                    {
                        goblinstats = nn.goblindamage(stats, goblinstats);

                        stats = n.damage(stats, goblinstats);
                    }
                    else if (move == 2)
                    {
                        stats = n.Block(stats, goblinstats);
                    }
                    else if (move == 3 & special == true)
                    {
                        if (specialblock == true)
                        {
                            Console.WriteLine("special");
                            stats = n.Specialblock(stats, goblinstats, specialblock);
                            specialblock = false;
                        }
                        else
                        {
                            Console.WriteLine("you already used the special");
                            goto move;
                        }
                    }
                    if (goblinstats[0] <= 0)
                    {
                        goblin_alive = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("goblin brute dies");
                        Console.ReadLine();
                        stats = n.Resethealth(stats, defaulthealth);
                        lvlupcheck = lvl;
                        xp = n.xp(xp, 5);
                        lvl = n.lvls(xp, lvl, stats, 5);
                        if (lvl > lvlupcheck)
                        {
                            xp = 0;
                        }
                        defaulthealth = stats[0];
                        goto worldkeuze;
                    }
                    if (stats[0] <= 0)
                    {
                        goto dead;
                    }


                }
            }

        monsters:;
            if (special == true)
            {
                specialblock = true;
            }
            monsters = nn.Monsters(stats);
            if (monsters >= 7 & explored >= 3)
            {
                goblinking_alive = true;
                goto goblinking;
            }
            else if (monsters <= 3 & explored >=2)
            {
                luckygoblin_alive = true;
                goto luckygoblin;
            }
            else
            {
                goblin_alive = true;
                goto goblin;
            }
        dead:;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("you died");
            Console.ReadLine();
            goto newgame;
        you_won:;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("you won!!");
            Console.ReadLine();
            Environment.Exit(0);
        getspecialblock:;
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("unlocked special block");
            Console.ReadLine();
            special = true;
            goto worldkeuze;
        }
    }
}
